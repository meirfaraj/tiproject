--------------------------------------------------------------------------
-- cours exported from InstrumentsVanillesTauxFlottant.txt
--------------------------------------------------------------------------


InstrumentsVanillesTauxFlottant = Tmv(INSTRUMENTS_VANILLES_TAUX_FLOTTANT_TITLE_ID,INSTRUMENTS_VANILLES_TAUX_FLOTTANT_TITLE_HEADER_ID)

function InstrumentsVanillesTauxFlottant:performCalc()
  self:appendToResult("")
  self:appendTitleToResult("Instrument Vanille "..a_grave.." taux flottant<h1/>")
  self:appendToResult("Cn connu en d"..e_acute.."but de p"..e_acute.."riode n, donc "..a_grave.." l'instant t(n-1):instrument taux r"..e_acute.."visable")
  self:appendToResult("Cn connu en fin de p"..e_acute.."riode n, donc "..a_grave.." l'instant t(n):instrument taux variable ")
  self:appendToResult("Les Euribor capitalis"..e_acute.." sont utilis"..e_acute.."s pour r"..e_acute.."f"..e_acute.."rencer des taux variables")
  self:appendToResult("")
  self:appendMathToResult("1+E3C(n-1,n)=Produit(1+E3(k-1,k)D(k))")
  self:appendToResult(" avec ")
  self:appendMathToResult("D(k)=Nj(t(k-1),t(k))/360")
  self:appendToResult("E3R ou bien E6R, Euribor r"..e_acute.."visable.")
  self:appendToResult("b(t) = 1/(1+r(t))^d ou bien si r proportionnel b(t) = 1/(1+d*r(t)) avec d=Nj/Na ")
  self:appendToResult("b(t) repr"..e_acute.."sente le facteur d'actualisation qui permet de calculer par simple multiplication la valeur ")
  self:appendToResult("actualis"..e_acute.."e en t d'un flux disponible en t+d.")
  self:appendToResult("Un instrument "..a_grave.." taux r"..e_acute.."visable, V=1 en t+ et V=1+Cn en t-")
  self:appendToResult(""..a_grave.." t V(t)=(1+Cn)/(1+d*r(t))=(1+Cn)*b(t) avec Cn=N * Dn * r(t-1) et d=Nj/Na et t entre tn-1 et tn")
  self:appendToResult("")
  self:appendTitleToResult("Exemple: "..e_acute.."valuation et sensibilit"..e_acute.." d'un actif "..a_grave.." taux r"..e_acute.."visable")
  self:appendTitleToResult("")
  self:appendToResult("actif "..a_grave.." taux r"..e_acute.."visable, de 4 ans, distribue coupon semestriel le 1/4 et 1/10")
  self:appendToResult("et r"..e_acute.."f"..e_acute.."renc"..e_acute.." sur L6-mois,N=100K, L6(1/10/n-1)=4%")
  self:appendToResult("C(s)=L(s-1) * N * Nj/360")
  self:appendToResult("i- V(31/3/n) = 100K+Cn=100K + 100K*0.04*182/360=102022")
  self:appendToResult(" V(1/4/n) = 100K titre au pair")
  self:appendToResult(" "..a_grave.." 3 mois du r"..e_grave.."glement 30/12/n-1 L3-mois=5%, V(30/12/n-1)=102022/(1+L*D)=102022/(1 + 0.05*90/360)=100762")
  self:appendToResult("ii-variation du titre et la perte de valeur induite par la hausse L3de 0.2% le 30/12/n-1")
  self:appendToResult("V(r)=F/(1+rD), dV/dr=-FD/(1+rD)^2; le 30/12/n-1 r=E3=5%, D=0.25, V(r)=100762")
  self:appendToResult("donc dV/dr=-102762*0.25/(1+0.05*0.25)^2=-24880 donc 0.2% de hausse taux court entraine baisse de ")
  self:appendToResult("V=0.002*24880=49.8  ")
  self:appendToResult("")
  self:appendTitleToResult("Exemple: "..e_acute.."valuation et risque de taux d'un actif "..a_grave.." taux variable")
  self:appendTitleToResult("")
  self:appendToResult("titre "..a_grave.." taux variable N=50M, ref sur E3-mois (reset trimestriel); coupon annuel (donc capitalis"..e_acute..")")
  self:appendToResult("Cn=Produit(1+D*E3) - 1 avec D=Nj/360, coupon vers"..e_acute.." le 1/10")
  self:appendToResult("1/10/n-1: E3=4%, 1/1/n: E3=3.6%(92j depuis dernier reset), 1/4/n: E3=4%(90j), 1/7/n: E3=3.8%(91j), 1/10/n: E3=3.9%(92j)")
  self:appendToResult("et le 1/2/n donc "..a_grave.." 59j du prochain reset E2=4%")
  self:appendToResult("V(t)=F/(1+D*r(t)), dV/dr=-F*D/(1+r*D)^2")
  self:appendToResult("i- 1/10/n-1: apr"..e_grave.."s le coupon et instrument au pair V=50000")
  self:appendToResult("1/1/n: V=50000(1+0.04*92/360)=50511.111")
  self:appendToResult("1/4/n: il faut capitalis"..e_acute.." V=50511.111(1+0.036*90/360)=50965.711")
  self:appendToResult("1/2/n: V=50965.711/(1+59/360*0.04)=50633.778")
  self:appendToResult("ii- variations pour hausse des taux de 0.1%")
  self:appendToResult("2/1/n: dV=-dr*50965.711*(89/360)/(1+(89/360)*0.036)^2=-dr*12378")
  self:appendToResult("31/3/n: dV=-dr*50965.711*(1/360)/(1+(1/360)*0.036)^2=-dr*141")
  self:appendToResult("1/2/n: dV=-dr*50965.711*(59/360)/(1+(59/360)*0.04)^2=-dr*8244")
  self:appendToResult("pour dr=0.001 : dv=12378 Euros le 2/1 etc...")

end

