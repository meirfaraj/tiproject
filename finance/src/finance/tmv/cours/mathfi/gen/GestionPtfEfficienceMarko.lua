--------------------------------------------------------------------------
-- cours exported from GestionPtfEfficienceMarko.txt
--------------------------------------------------------------------------


GestionPtfEfficienceMarko = Tmv(GESTION_PTF_EFFICIENCE_MARKO_TITLE_ID,GESTION_PTF_EFFICIENCE_MARKO_TITLE_HEADER_ID)

function GestionPtfEfficienceMarko:performCalc()
  self:appendToResult("")
  self:appendTitleToResult("Gestion de ptf efficience Markowitz")
  self:appendToResult("\n")
  self:appendToResult("Markowitz : ")
  self:appendMathToResult("Rp - "..c_theta.."/2 "..c_sigma.."(P)^2")
  self:appendToResult(" -> max \n")
  self:appendToResult("ici pour obtenir la composition du ptf on aura:\n")
  self:appendToResult("")
  self:appendMathToResult("Rp - "..c_theta.."/2 * "..c_sigma.."(P)^2")
  self:appendToResult(" -> max donc ")
  self:appendMathToResult("rf + Xm(R-rf)-"..c_theta.."/2 *(Xm*"..c_sigma.."(M))^2")
  self:appendToResult(" -->max et donc en dérivant on aura\n")
  self:appendToResult("")
  self:appendMathToResult("Xm=(R(M)-rf)/("..c_theta.." * "..c_sigma.."(M)^2)")
  self:appendToResult("\n")
  self:appendToResult("\n")
  self:appendToResult("")
  self:appendMathToResult(""..c_sigma.."(P)^2 = X(A)^2*"..c_sigma.."(P)^2+ X(B)^2*"..c_sigma.."(B)^2+2*"..c_rho.."*"..c_sigma.."(A)*"..c_sigma.."(B) ")
  self:appendToResult("\n")
  self:appendToResult("et le ptf qui minimise le risque on mimnimise \n")
  self:appendToResult("")
  self:appendMathToResult(""..c_sigma.."(P)= (X(A)^2*"..c_sigma.."(A)^2+ X(B)^2*"..c_sigma.."(B)^2+2*"..c_rho.."*"..c_sigma.."(A)*"..c_sigma.."(B))^(1/2) ")
  self:appendToResult("\n")
  self:appendToResult("on dérivant par X(A) on aura \n")
  self:appendToResult("pour "..c_rho.." entre {-1 et 1} ")
  self:appendMathToResult(" X(A)= ("..c_sigma.."(B)^2 - "..c_rho.."*"..c_sigma.."(A)*"..c_sigma.."(B))/("..c_sigma.."(A)^2+"..c_sigma.."(B)^2-2*"..c_rho.."*"..c_sigma.."(A)*"..c_sigma.."(B))")
  self:appendToResult(" \n")
  self:appendToResult("pour "..c_rho.." = -1 la composition du ptf Z et tel que ")
  self:appendMathToResult("X(A) = "..c_sigma.."(B) / ("..c_sigma.."(A) + "..c_sigma.."(B))")
  self:appendMathToResult(" \n")
  self:appendToResult("et donc par ex Z= {3/5 A ; 2/5 B} alors Rz=(3/5)*Ra+(2/5)*Rb \n")
  self:appendToResult(" \n")
  self:appendToResult("le ptf parfait en fct de "..c_theta.." on ")
  self:appendMathToResult("Rp - "..c_theta.."/2 "..c_sigma.."(P)^2")
  self:appendToResult("-> max \n")
  self:appendToResult("")
  self:appendMathToResult("X(A)*R(A) + (1-X(A))*R(B) - ("..c_theta.."/2) (X(A)^2*"..c_sigma.."(A)^2+ X(B)^2*"..c_sigma.."(B)^2+2*"..c_rho.."*"..c_sigma.."(A)*"..c_sigma.."(B)) ")
  self:appendToResult(" \n")
  self:appendToResult("")
  self:appendMathToResult("X(A)=(R(A)-R(B)+"..c_theta.."*("..c_sigma.."(B)^2-"..c_rho.."*"..c_sigma.."(A)*"..c_sigma.."(B)))/("..c_theta.."*("..c_sigma.."(A)^2 + "..c_sigma.."(B)^2-2*"..c_rho.."*"..c_sigma.."(A)*"..c_sigma.."(B)))")
  self:appendToResult(" \n")
  self:appendToResult(" \n")
  self:appendToResult("Quand on a une VAD le risque du ptf peut etre superieur au risques de tous les actifs qui le composent. \n")

end

