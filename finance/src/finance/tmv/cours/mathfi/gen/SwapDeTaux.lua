--------------------------------------------------------------------------
-- cours exported from SwapDeTaux.txt
--------------------------------------------------------------------------


SwapDeTaux = Tmv(SWAP_DE_TAUX_TITLE_ID,SWAP_DE_TAUX_TITLE_HEADER_ID)

function SwapDeTaux:widgetsInit()
     self:add(-1,{"cours","Exemple: valorisation et risue swap vanille","Exemple: valorisation de swap","Exemple: swap avec taux forward"},"curTtl",true)
end

function SwapDeTaux:performCalc()
self.operation = ""
  if varValue["curTtl"] == "cours" then
  self:appendToResult("")
  self:appendTitleToResult("Swap vanille")
  self:appendToResult("Swap taux fixe contre taux variable ou taux fixe donneur:swap emprunteur ")
  self:appendMathToResult("M * Di*[TV-TF]")
  self:appendToResult(".")
  self:appendToResult("Swap taux variable contre taux fixe ou taux fixe receveur:swap preteur ")
  self:appendMathToResult("M * Di*[TF-TV]")
  self:appendToResult(".")
  self:appendToResult("Swap taux fixe k donneur: ")
  self:appendMathToResult("S(r-k)")
  self:appendToResult(" s'analyse comme un emprunt "..a_grave.." taux fixe k combin"..e_acute.." "..a_grave.." ")
  self:appendToResult("un pret "..a_grave.." taux variable r, long actif Ar et court actik Ak: ")
  self:appendMathToResult("S(r-k)=Ar-Ak")
  self:appendToResult(" et vis versa pour ")
  self:appendMathToResult("S(k-r)")
  self:appendToResult(".")
  self:appendToResult("")
  self:appendMathToResult("S(k-r)=ak-ar")
  self:appendToResult(": jambe fixe -jambe variable ou bien ")
  self:appendMathToResult("S(k-r)=Ak-Ar")
  self:appendToResult(": composante fixe - composante variable ")
  self:appendToResult("Deux m"..e_acute.."thodes de valorisation des swap: d"..e_acute.."mant"..e_grave.."lement et "..e_acute.."quivalence.")
  self:appendToResult("pour d"..e_acute.."ment"..e_grave.."lement on actualise en utilisant les taux ZC extrait des gamme des taux swap k(t)")
  self:appendToResult("\n\n")
        return
     end

  if varValue["curTtl"] == "Exemple: valorisation et risue swap vanille" then
  self:appendToResult("")
  self:appendTitleToResult("Exemple: valorisation et risue swap vanille")
  self:appendToResult("swap preteur(tx fixe receveur)  de 4 ans de dur"..e_acute.."e le 01/10/n-1, N=100M,")
  self:appendToResult("jambe variable E6R(coupon semestriel 01-04 et 01-10) et jambe fixe coupon annuel k=5% vers"..e_acute.." le 01/10/n,n+1,n+2,n+3")
  self:appendToResult("dates reset et les gammes de tx plates de la ")
  self:appendBoldToResult("Jv")
  self:appendToResult(" ainse que Nj(t-1,t):\n")
  self:appendToResult("01/10/n-1 tx plat: 5,5%, 01/4/n: 5%(182), 01/10/n=5.5%(183), 01/04/n+1: 5.5%(182), 01/10/n+1: 5%(183) \n")
  self:appendToResult("1)01/10/n+1 (apr"..e_grave.."s versement de coupon): gamme des taux plate 5% (taux fixe BTAN 4 ans et tx fixe swap 4 ans)\n")
  self:appendToResult("valeur march"..e_acute.." du swap V=0 car composantes fixes et variables au pair\n")
  self:appendToResult("2)31/3/n:gamme plate et tous les tx "..e_acute.."gaux "..a_grave.." 6%, donc juste avant versement de coupon V(S(k-r):\n")
  self:appendToResult("le coupon variable du 01/04/n = ")
  self:appendMathToResult(" Cn=100000*5.5%*182/360=2780.5K ")
  self:appendToResult(" donc V(Ar) = 100000+Cn=102780.5K \n")
  self:appendToResult("")
  self:appendMathToResult(" V(Ak)=100000 * (1.06)^1/2 * ( "..sum_sym.."((0.05/1.06^t)+100*1/1.06^4) = 99388.8 K ,t,1,4)")
  self:appendToResult(" \n")
  self:appendToResult("Donc ")
  self:appendMathToResult("V(S(k-r))=-3391.7K")
  self:appendToResult(" \n ")
  self:appendToResult("3) 01/10/n : (apr"..e_grave.."s coupons) tous les ts sont 5.5% calcul de la valeur des swaps par 2 m"..e_acute.."thodes: \n")
  self:appendToResult("M"..e_acute.."thode d"..e_acute.."mant"..e_grave.."lement: V(Ar)=100000K\n")
  self:appendToResult("")
  self:appendMathToResult(" V(Ak)=100000 * ( "..sum_sym.."((0.05/1.055^t)+100*1/1.055^3) = 98651.033 K ,t,1,3)")
  self:appendToResult(" \n ")
  self:appendToResult("Donc V(S(k-r))=-1348.966K \n ")
  self:appendToResult("M"..e_acute.."thode "..e_acute.."quivalence: ")
  self:appendMathToResult(" V(S(k-r))=100000 (5%-5.5%) * ( "..sum_sym.."((1/1.055^t)) = -1348.966K ,t,1,3)")
  self:appendToResult(" \n ")
  self:appendToResult("4) le 30/12/n-1, E(3mois)=5% aainsi que tous les autres tx. Calculons incidence d'une hausse des tx de 0.2% le 30/12/n-1 \n")
  self:appendToResult("On la formule ")
  self:appendMathToResult("dV(S(k-r))/dr=dV(A(k))/dr - dV(A(r))/dr ")
  self:appendToResult(" et ")
  self:appendMathToResult("A(r)=F * D/(1+rD)^2")
  self:appendToResult(" donc ")
  self:appendMathToResult("dV(A(r))/dr= -FD/(1+rD)^2")
  self:appendToResult(" \n")
  self:appendToResult("Le 30/12/n-1, les tx sont tous "..e_acute.."gaux "..a_grave.." 5%, d"..e_grave.."s lors une variation DELTA(r)=0.2% implique au premier ordre :\n")
  self:appendToResult("")
  self:appendMathToResult(" DELTA(V(Ar))=-DELTA(r) * F * D/(1+rD)^2 = -0.002 * 102780.5 * 0.25 / (1+0.25*0.05)^2 = -50.129K ")
  self:appendToResult(" \n")
  self:appendToResult("")
  self:appendMathToResult(" V(Ak)="..sum_sym.."((Fi/(1+r)^t-0.25) ,t,1,4)")
  self:appendToResult(" donc ")
  self:appendMathToResult("dV(A(k))/dr= - "..sum_sym.."(((t-0.25)Fi/(1+r)^t+0.75) ,t,1,4)")
  self:appendToResult(" au premier ordre :\n")
  self:appendToResult("")
  self:appendMathToResult(" DELTA(V(Ak))= DELTA(r) * dV(A(k))/dr = -0.002 * 334845.004 = -669.69K ")
  self:appendToResult(" \n")
  self:appendToResult("Donc DELTA(r) = 0.2% implique DELTA(V(S))=-669.69+50.129=-619.56K ")
  self:appendToResult("\n\n")
        return
     end

  if varValue["curTtl"] == "Exemple: valorisation de swap" then
  self:appendToResult("")
  self:appendTitleToResult("Exemple: valorisation de swap")
  self:appendToResult("Le 1/1/n date(0), courbe des swap plate "..a_grave.." 4%(quelque soit la matu, k=4%)")
  self:appendToResult("swap preteur X de 100M, 4 ann"..e_acute.."es "..a_grave.." courir, taux fixe receveur/L-3mois r"..e_acute.."visable donneur, contract"..e_acute.."")
  self:appendToResult(""..a_grave.." une date ant"..e_acute.."rieure au taux fixe 5%, coupons r"..e_acute.."visable pay"..e_acute.."s trimestriellement(31/3,30/6,30/9,31/12)")
  self:appendToResult("et le coupon fixe le 31/12. L3-mois(30/9/n-1)=4%(dern"..e_grave.."re date de reset)")
  self:appendToResult("On calcule valeur du swap le 1/1/n selon 2 m"..e_acute.."thodes, puis sa valeur le 30/12/n-1:")
  self:appendToResult("\n")
  self:appendToResult("a)1/1/n(0+, juste apr"..e_grave.."s le r"..e_grave.."glement)")
  self:appendToResult("\n")
  self:appendToResult("M"..e_acute.."thode d"..e_acute.."mant"..e_grave.."lement:V0(S(k-r))=V0+(A(k)) - V0+(A(r))")
  self:appendToResult("A(r) "..e_acute.."tant au pair V0+(A(r))=100")
  self:appendToResult("Courbe des taux plate donc taux ZC utilis"..e_acute.."s pour actualis"..e_acute.." A(k) sont "..e_acute.."gaux aux taux fixe swap(courbe plate)")
  self:appendToResult("")
  self:appendMathToResult("V0+(A(k))=5*"..sum_sym.."((1/1.04^t)+100*1/1.04^4=103.63,t,1,4)")
  self:appendToResult("donc ")
  self:appendMathToResult("V0(S(k-r))=3.63M")
  self:appendToResult(" Euro")
  self:appendToResult("\n")
  self:appendToResult("M"..e_acute.."thode "..e_acute.."quivalence:")
  self:appendMathToResult("V0+(S(k-r))=(5-4)"..sum_sym.."((1/1.04^t)=3.63,t,1,4)")
  self:appendToResult("M Euro")
  self:appendToResult("\n")
  self:appendToResult("b) valeur le 30/12/n-1 en 0-, juste avant r"..e_grave.."glement:")
  self:appendToResult("\n")
  self:appendToResult("rajouter pour chaque composante le coupon(annuel pour le fixe et semestriel pour le variable(")
  self:appendMathToResult("D = Nj/Na = 0.25")
  self:appendToResult(")")
  self:appendToResult("")
  self:appendMathToResult("V0-(A(k))=103.63+5=108.63")
  self:appendToResult(", ")
  self:appendMathToResult("V0-(A(r))=100 + 4 * 0.25=101")
  self:appendToResult(" donc ")
  self:appendMathToResult("V0-(S(k-r))=7.63")
  self:appendToResult("M Euro")
  self:appendToResult("\n")
  self:appendToResult("")
  self:appendBoldToResult("B.")
  self:appendToResult(" Un an plus tard 1/1/n+1(donc le Swap lui reste 3 ans), la gamme des taux fixe swap(k(theta)) "..e_acute.."volue")
  self:appendToResult("1an: 6%, 2ans: 6.5%, 3ans=7%, 4ans: 7.2%")
  self:appendToResult("\n")
  self:appendToResult("on commence par calciler la gamme ZC 1,2 et 3 ans implicite puis on calcule la valeur du swap(L-3mois contre 5%)")
  self:appendToResult("\n")
  self:appendToResult("a)calcul des prix b(theta) et des ZC "..a_grave.." partier de k(theta)")
  self:appendToResult("\n")
  self:appendToResult("")
  self:appendMathToResult("r1=k1=6%")
  self:appendToResult("donc ")
  self:appendMathToResult("b1=1/1.06=0.9434")
  self:appendToResult("; En "..e_acute.."crivant q'un titre "..a_grave.." 2 ans de coupon k2 est au pair, il vient:")
  self:appendToResult("")
  self:appendMathToResult("1=k2b1+(1+k2)b2=0.065*0.9434+1.065b2")
  self:appendToResult(", soit ")
  self:appendMathToResult("b2=0.8814")
  self:appendToResult(" donc ")
  self:appendMathToResult("r2=6.516%")
  self:appendToResult(" (")
  self:appendMathToResult("b2 = 1/(1+r2)^2")
  self:appendToResult(")")
  self:appendToResult("de m"..e_circ .."me pour 3 ans k3:1=k(3)b(1)+k(3)b(2)+(1+k(3))b(3) donc b(3)=0.8152 et r3=7.048%")
  self:appendToResult("b)valeur du swap le 1/1:n+1: par d"..e_acute.."mant"..e_grave.."lement=")
  self:appendMathToResult("V0+(A(r))=100M")
  self:appendToResult(",")
  self:appendMathToResult("V0+(A(k))=5*(b(1)+b(2))+105*b(3)=94.72")
  self:appendToResult("M")
  self:appendToResult("")
  self:appendMathToResult("V0+(S(k-r))=-5.28M")
  self:appendToResult("; Par "..e_acute.."quivalence: ")
  self:appendMathToResult("V0+(S(k-r))=(5-7)*(b1+b2+b3)=-5.28")
  self:appendMathToResult("M")
  self:appendToResult("\n")
        return
     end

  if varValue["curTtl"] == "Exemple: swap avec taux forward" then
  self:appendToResult("")
  self:appendTitleToResult("Exemple: swap avec taux forward")
  self:appendToResult("taux actuariels ZC r(theta) exrait des courbes taux fixes des swaps vanille le 1/4/n")
  self:appendToResult("3mois: 5%, 6mois: 5.3%, 9mois=5.4%, 12mois: 5.5%, 15mois: 5.6%")
  self:appendToResult("On se situe le 1/4/n, swap L-6mois contre taux fixe 6%, 15mois de vie "..a_grave.." courir avec 3 echeances semestrielles")
  self:appendToResult("situ"..e_acute.."s les 1/7/n, 1/1/n+1 et 1/7/n+1 et jambe fixe 1/7/n et 1/7/n+1; N=100M et le 1/1/n L-6mois=4%")
  self:appendToResult("On raisonne avec semestre = 0.5 et trimestre 0.25")
  self:appendToResult("M"..e_acute.."thode des taux forward:")
  self:appendToResult("")
  self:appendMathToResult("(1+f(3,6))^0.5= (1+r(9))^0.75/(1+r(3))^0.25 ")
  self:appendToResult(" soit ")
  self:appendMathToResult("f(3,6)=5.6%")
  self:appendToResult(" ; ")
  self:appendMathToResult("(1+f(9,6))^0.5=(1+r(15))^1.25/(1+r(9))^0.75")
  self:appendToResult(" soit ")
  self:appendMathToResult("f(9,6)=5.91%")
  self:appendToResult(" \n")
  self:appendToResult("")
  self:appendBoldToResult("Jambe fixe")
  self:appendToResult(" =:  ")
  self:appendMathToResult("V(a(k))=6*(1/1.05^0.25+1/1.056^1.25)=11.89")
  self:appendToResult("M")
  self:appendToResult("")
  self:appendBoldToResult("Jambe variable")
  self:appendToResult(": on actualise le premier coupon connu(0.5*4%*100=2) et les "..e_acute.."quivalents certains des suivants(tx forward*100)")
  self:appendToResult("")
  self:appendMathToResult("V(a(r))=2*1/1.05^0.25+(5.6/1.054^0.75+5.91/1.056^1.25)=")
  self:appendToResult(" \n")
  self:appendToResult("donc valeur du ")
  self:appendMathToResult("swap=V(a(k))-V(a(r))")
  self:appendToResult("\n")
  self:appendToResult("M"..e_acute.."thode d"..e_acute.."mant"..e_grave.."lement:\n")
  self:appendToResult("")
  self:appendMathToResult("V(A(k))=6*(1/1.05^0.25+1/1.056^1.25)+100/1.056^1.25=105.3")
  self:appendToResult(" et ")
  self:appendMathToResult("V(A(r))=102/1.05^0.25=100.76")
  self:appendToResult(" \n")
  self:appendToResult("")
  self:appendMathToResult("Vswap=V(A(k))-V(A(r))")
        return
     end


end

