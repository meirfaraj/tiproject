--------------------------------------------------------------------------
-- cours exported from marchéObligataire.txt
--------------------------------------------------------------------------


MarcheObligataire = Tmv(MARCHE_OBLIGATAIRE_TITLE_ID,MARCHE_OBLIGATAIRE_TITLE_HEADER_ID)

function MarcheObligataire:performCalc()
  self:appendToResult("")
  self:appendTitleToResult("march"..e_acute.." obligataire")
  self:appendToResult("")
  self:appendTitleToResult("valeur "..a_grave.." t quelconque")
  self:appendToResult("")
  self:appendMathToResult("V(r(t))= ((1+r(t))^t) * (F1/(1+r)+F2/(1+r)^2+...+FT/(1+r)^T)")
  self:appendToResult(" avec ")
  self:appendMathToResult("t=Nj/Na")
  self:appendToResult(" temps "..e_acute.."coul"..e_acute.." depuis ")
  self:appendMathToResult("t=0")
  self:appendToResult("Ivi on a fait une capitalisationde la valeur de l'obligation "..a_grave.." l'instant t")
  self:appendToResult("")
  self:appendTitleToResult("cotation des obligations")
  self:appendToResult("")
  self:appendMathToResult("Cc=100kT")
  self:appendToResult(" avec ")
  self:appendMathToResult("T=Nj/Na")
  self:appendToResult("Le cours plein coupon C'(t) "..a_grave.." ")
  self:appendMathToResult("t=Nj/Na")
  self:appendToResult(" ")
  self:appendMathToResult("V(t)=C'(t)*V(n)/100")
  self:appendToResult("")
  self:appendMathToResult("C'(t) = 100 * ((1+r(t))^t) * (k/(1+r)+k/(1+r)^2+...+(1+k)/(1+r)^T)")
  self:appendToResult("Le cours pied coupon : ")
  self:appendMathToResult("C(t) = C'(t) - 100 * k * t")
  self:appendToResult(" avec ")
  self:appendMathToResult("t = Nj/Na")
  self:appendToResult("")
  self:appendTitleToResult("Variation, sensibilit"..e_acute.." et Duration d'un titre "..a_grave.." revenus fixes")
  self:appendToResult("")
  self:appendBoldToResult("Sensibilit"..e_acute.." : ")
  self:appendToResult("")
  self:appendMathToResult("S=-dV/Vdr = (1/(1+r)) * (1/V * Somme(t*F(t)/(1+r)^t))")
  self:appendToResult("")
  self:appendMathToResult("=D/(1+r)")
  self:appendToResult(" donc c'est la duration diviser par 1+r")
  self:appendToResult("")
  self:appendMathToResult("DELTA V/V = -S DELTA r")
  self:appendToResult("")
  self:appendMathToResult("D=S*(1+r)")
  self:appendToResult("Pour un ")
  self:appendBoldToResult(" z"..e_acute.."ro coupon ")
  self:appendToResult(" ")
  self:appendMathToResult("D=T*F(T)/V*(1+r)^T")
  self:appendToResult(" or ")
  self:appendMathToResult("V=F(T)/(1+r)^T")
  self:appendToResult(" donc ")
  self:appendMathToResult("D=T")
  self:appendToResult("Pour une ")
  self:appendBoldToResult(" rente perp"..e_acute.."tuelle ")
  self:appendToResult(" qui verse x ")
  self:appendMathToResult("V="..sum_sym.."((x/(1+r)^t),t,1,"..infinit_sym..")")
  self:appendToResult(" donc ")
  self:appendMathToResult("V=x/r")
  self:appendToResult("")
  self:appendMathToResult("S=-dLnV/dr=1/r")
  self:appendToResult(" et ")
  self:appendMathToResult("D = S * (1+r)=(1+r)/r")
  self:appendToResult("La ")
  self:appendBoldToResult("convexit"..e_acute.."")
  self:appendToResult(" pour une appr"..e_acute.."ciation plus fine")
  self:appendToResult("")
  self:appendMathToResult("DELTA V/V=-S DELTA r = 1/V * dV/dr * DELTA r")
  self:appendToResult("d"..e_acute.."veloppement "..a_grave.." l'ordre 2 donne")
  self:appendToResult("")
  self:appendMathToResult("DELTA V/V=-S DELTA r + 1/2 * C (DELTA r)^2")
  self:appendToResult("avec ")
  self:appendMathToResult("C = 1/V d^2V/dr^2 = 1/V * 1/(1+r)^2")
  self:appendToResult(" Somme ")
  self:appendMathToResult("(t*(t+1)*F(t)/(1+r)^t)")
  self:appendToResult("Exemple : obligation 10 ans "..a_grave.." courir, de 100?, k=6%,r=5%")
  self:appendToResult("")
  self:appendMathToResult("V="..sum_sym.."((6/1.05^t)+106/(1.05)^10=107.72?,t,1,9)")
  self:appendToResult("Sa sensibilit"..e_acute.." ")
  self:appendMathToResult("S=-dV/Vdr=1/(1.05*107.72) * [1 * 6/1.05 + 2 * 6/1.05^2 +...+ 10 * 106/1.05^10]=7.52")
  self:appendToResult("Duration ")
  self:appendMathToResult("D=1.05*S = 7.89")
  self:appendToResult(" ans")
  self:appendToResult("hausse de taux de 1% traduit approximativement, par une baisse de valeur de titre de 7.52%")
  self:appendToResult("Exemple : obligation 10 ans, venant de d"..e_acute.."tacher un coupon 5%, ")
  self:appendToResult("")
  self:appendMathToResult("r=5%")
  self:appendToResult(" donc obligation actuellement au pair")
  self:appendToResult("")
  self:appendMathToResult("V(5%)="..sum_sym.."((5/1.05^t)+100/(1.05)^10=100?,t,1,10)")
  self:appendToResult("pour ")
  self:appendMathToResult("r=5.1%")
  self:appendToResult(" ")
  self:appendMathToResult("V(5,1%)="..sum_sym.."((5/1.051^t)+100/(1.051)^10=99.23?,t,1,10)")
  self:appendToResult("Sa sensibilit"..e_acute.." ")
  self:appendMathToResult("S=-DeltaV/VDr=0.77/100*0.001=7.7")
  self:appendToResult("d'o"..u_grave.." Duration ")
  self:appendMathToResult("D=1.05*7.7 = 8.09")
  self:appendToResult(" ans")
  self:appendToResult("Exemple: rente perp"..e_acute.."tuelle avec r et k")
  self:appendToResult("")
  self:appendMathToResult("V=k/r, S=-dV/Vdr=1/r, C=1/V * d^2V/dr^2=2k/Vr^3=2/r^2")
  self:appendToResult("")
  self:appendMathToResult("r=10%")
  self:appendToResult(" donc ")
  self:appendMathToResult("S=10")
  self:appendToResult(" et ")
  self:appendMathToResult("C=200")
  self:appendToResult("Lors de la hausse de taux de 2% implique une baisse de la valeur calculable")
  self:appendToResult("")
  self:appendMathToResult("-Delta(V)/V=SDelta(r)-1/2*C*Delta(r)^2=10*0.02-100*(0.02)^2=16%")

end

